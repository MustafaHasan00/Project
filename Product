package Keke;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import javafx.stage.Stage;


public class Product extends Main{
	  ArrayList<String> category = new ArrayList<>();
	  ArrayList<String> productName = new ArrayList<>();
	  ArrayList<String> imageName = new ArrayList<>();
	  ArrayList<String> price = new ArrayList<>();
	  ArrayList<String> made = new ArrayList<>();
	public void start(Stage productStage) throws Exception {
	try {
	 File logFile = new File("src/Keke/Products.txt");
	  Scanner sc = new Scanner(logFile);
	  String Category = "";
	  String ProductName = "";
	  String ImageName = "";
	  String Price = "";
	  String Made = "";
	  while (sc.hasNextLine()) {
	  String Test = sc.nextLine();
     String[] ProdSplit = Test.split(" ");
     Category = ProdSplit[0];
     ProductName = ProdSplit[1];
     ImageName = ProdSplit[2];
     Price = ProdSplit[3];
     Made = ProdSplit[4];
     category.add(Category);
     productName.add(ProductName);
     imageName.add(ImageName);
     price.add(Price);
     made.add(Made);
	  }
	  categ();
	  
	  }
	 catch (Exception e) {
		  System.out.print("opps");
		  e.printStackTrace();
	  }
	}
	public void categ() {
	    ArrayList<String[]> clothesList = new ArrayList<>();
	    ArrayList<String[]> electronicsList = new ArrayList<>();
	    ArrayList<String[]> furnitureList = new ArrayList<>();
	    ArrayList<String[]> shoesList = new ArrayList<>();
	    ArrayList<String[]> miscellaneousList = new ArrayList<>();

	    for (int i = 0; i < category.size(); i++) {
	        String[] product = new String[5];
	        product[0] = category.get(i);
	        product[1] = productName.get(i);
	        product[2] = imageName.get(i);
	        product[3] = price.get(i);
	        product[4] = made.get(i);

	        switch (category.get(i)) {
	            case "clothes":
	                clothesList.add(product);
	                break;
	            case "electronics":
	                electronicsList.add(product);
	                break;
	            case "furniture":
	                furnitureList.add(product);
	                break;
	            case "shoes":
	                shoesList.add(product);
	                break;
	            default:
	                miscellaneousList.add(product);
	                break;
	        }
	    }
	}
}
